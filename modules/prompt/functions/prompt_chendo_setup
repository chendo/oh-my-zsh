#
# Based on sorin's theme
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Jack Chen <chendo@gmail.com>
#
#

function prompt_chendo_pwd() {
  local repo="${$(git rev-parse -q --show-toplevel 2> /dev/null):t}"

  parts=(${(s:/:)${${PWD}/#${HOME}/\~}})

  i=0
  while (( i++ < ${#parts} )); do
    part="$parts[i]"
    if [[ "$part" == "$repo" ]]; then
      # if this part of the path represents the repo,
      # underline it, and skip truncating the component
      parts[i]="%U$part%u"
    else
      # Shorten the path as long as it isn't the last piece
      if [[ "$parts[${#parts}]" != "$part" ]]; then
        parts[i]="$part[1,2]"
      fi
    fi
  done

  print "${(j:/:)parts}"
}

# Colors vary depending on time lapsed.
ZSH_THEME_GIT_TIME_SINCE_COMMIT_SHORT="%F{green}"
ZSH_THEME_GIT_TIME_SHORT_COMMIT_MEDIUM="%F{yellow}"
ZSH_THEME_GIT_TIME_SINCE_COMMIT_LONG="%F{red}"
ZSH_THEME_GIT_TIME_SINCE_COMMIT_NEUTRAL="%F{green}"
# Determine the time since last commit. If branch is clean,
# use a neutral color, otherwise colors will vary according to time.
function git_time_since_commit() {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    # Only proceed if there is actually a commit.
    if [[ $(git log 2>&1 > /dev/null | grep -c "^fatal: bad default revision") == 0 ]]; then
      # Get the last commit.
      last_commit=`git log --pretty=format:'%at' -1 2> /dev/null`
      now=`date +%s`
      seconds_since_last_commit=$((now-last_commit))

      # Totals
      MINUTES=$((seconds_since_last_commit / 60))
      HOURS=$((seconds_since_last_commit/3600))

      # Sub-hours and sub-minutes
      DAYS=$((seconds_since_last_commit / 86400))
      SUB_HOURS=$((HOURS % 24))
      SUB_MINUTES=$((MINUTES % 60))

      if [[ -n $(git status -s 2> /dev/null) ]]; then
          if [ "$MINUTES" -gt 30 ]; then
              COLOR="$ZSH_THEME_GIT_TIME_SINCE_COMMIT_LONG"
          elif [ "$MINUTES" -gt 10 ]; then
              COLOR="$ZSH_THEME_GIT_TIME_SHORT_COMMIT_MEDIUM"
          else
              COLOR="$ZSH_THEME_GIT_TIME_SINCE_COMMIT_SHORT"
          fi
      else
          COLOR="$ZSH_THEME_GIT_TIME_SINCE_COMMIT_NEUTRAL"
      fi

      if [ "$HOURS" -gt 24 ]; then
          echo "$COLOR${DAYS}d"
      elif [ "$MINUTES" -gt 60 ]; then
          echo "$COLOR${HOURS}h${SUB_MINUTES}m"
      else
          echo "$COLOR${MINUTES}m"
      fi
    else
      COLOR="$ZSH_THEME_GIT_TIME_SINCE_COMMIT_NEUTRAL"
      echo "$COLOR"
    fi
  fi
}

function prompt_chendo_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  if (( $+functions[git-info] )); then
    git-info
  fi
}

function prompt_chendo_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  add-zsh-hook precmd prompt_chendo_precmd

  zstyle ':omz:module:editor' completing '%B%F{red}...%f%b'
  zstyle ':omz:module:editor:keymap:primary' overwrite ' %F{red}♺%f'
  zstyle ':omz:module:editor:keymap' alternate ' %F{yellow}❮%f%B%F{red}❮%f%b%F{red}❮%f'
  zstyle ':omz:module:git' action ':%%B%F{yellow}%s%f%%b'
  zstyle ':omz:module:git' added ' %%B%F{green}✚%f%%b'
  zstyle ':omz:module:git' ahead ' %%B%F{yellow}%A⬆%f%%b'
  zstyle ':omz:module:git' behind ' %%B%F{yellow}%B⬇%f%%b'
  zstyle ':omz:module:git' branch ':%F{red}%b%f'
  zstyle ':omz:module:git' commit ':%F{green}%.7c%f'
  zstyle ':omz:module:git' deleted ' %%B%F{red}✖%f%%b'
  zstyle ':omz:module:git' modified ' %%B%F{blue}%m✱%f%%b'
  zstyle ':omz:module:git' position ':%F{green}%p%f'
  zstyle ':omz:module:git' renamed ' %%B%F{magenta}➜%f%%b'
  zstyle ':omz:module:git' stashed ' %%B%F{cyan}✭%f%%b'
  zstyle ':omz:module:git' unmerged ' %%B%F{yellow}═%f%%b'
  zstyle ':omz:module:git' untracked ' %%B%F{white}◼%f%%b'
  zstyle ':omz:module:git' info \
    'prompt'  ' %F{blue}±%f$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

  PROMPT='%F{cyan}%1~%f${git_info:+${(e)git_info[prompt]}} %(!.%B%F{red}#%f%b.%B%F{green}❯%f%b) '
  PROMPT='%F{cyan}$(prompt_chendo_pwd)${git_info:+${(e)git_info[prompt]}} %(!.%B%F{red}#%f%b.%B%F{green}❯%f%b) '
  RPROMPT='${editor_info[keymap]}${editor_info[overwrite]}%(?:: %F{red}⏎%f)${VIM:+" %B%F{green}V%f%b"}${git_info[rprompt]} %D{%H:%M:%S}'
  RPROMPT='$(git_time_since_commit)%f${editor_info[keymap]}${editor_info[overwrite]}%(?:: %F{red}⏎%f)${VIM:+" %B%F{green}V%f%b"}${git_info[rprompt]} %D{%H:%M:%S}'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_chendo_setup "$@"

